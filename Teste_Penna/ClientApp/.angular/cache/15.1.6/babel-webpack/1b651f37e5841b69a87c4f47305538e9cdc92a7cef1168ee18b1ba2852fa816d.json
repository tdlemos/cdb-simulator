{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { catchError, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class CdbService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.url = 'https://localhost:7208/cdb/calcular';\n  }\n  getPosts(request) {\n    return this.httpClient.post(this.url, request, httpOptions).pipe(catchError((error, caught) => {\n      console.error('There was an error!', error);\n      return of();\n    }));\n  }\n}\nCdbService.ɵfac = function CdbService_Factory(t) {\n  return new (t || CdbService)(i0.ɵɵinject(i1.HttpClient));\n};\nCdbService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CdbService,\n  factory: CdbService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAC9D,SAAqBC,UAAU,EAAEC,EAAE,QAAQ,MAAM;;;AAEjD,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIJ,WAAW,CAAC;IACvB,cAAc,EAAG;GAClB;CACF;AAKD,OAAM,MAAOK,UAAU;EAKrBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IAJtB,QAAG,GAAG,qCAAqC;EAIL;EAE9CC,QAAQ,CAACC,OAA0B;IACjC,OAAO,IAAI,CAACF,UAAU,CAACG,IAAI,CAAqB,IAAI,CAACC,GAAG,EAAEF,OAAO,EAAEN,WAAW,CAAC,CAC9ES,IAAI,CAACX,UAAU,CAAC,CAACY,KAAU,EAAEC,MAAuB,KAAqB;MACxEC,OAAO,CAACF,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,OAAOX,EAAE,EAAE;IACf,CAAC,CAAC,CAAC;EACH;;AAbWG,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAW,SAAVX,UAAU;EAAAY,YAFT;AAAM","names":["HttpHeaders","catchError","of","httpOptions","headers","CdbService","constructor","httpClient","getPosts","request","post","url","pipe","error","caught","console","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\terci\\source\\repos\\Teste_Penna\\Teste_Penna\\ClientApp\\src\\app\\Service\\cdb.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, catchError, of } from 'rxjs';\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({\r\n    'Content-Type':  'application/json'\r\n  })\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CdbService {\r\n  private url = 'https://localhost:7208/cdb/calcular';\r\n\r\n\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getPosts(request: CalculoCDBRequest): Observable<CalculoCDBResponse> {\r\n    return this.httpClient.post<CalculoCDBResponse>(this.url, request, httpOptions)\r\n    .pipe(catchError((error: any, caught: Observable<any>): Observable<any> => {\r\n      console.error('There was an error!', error);\r\n      return of();\r\n  }))\r\n  }\r\n\r\n}\r\n\r\nexport interface CalculoCDBRequest {\r\n  ValorInicial: number | null;\r\n  Meses: number | null;\r\n}\r\n\r\nexport interface CalculoCDBResponse {\r\n  TB: number;\r\n  CDI: number;\r\n  ValorFinal: number;\r\n  ImpostoAliquota: number;\r\n  ImpostoValor: number;\r\n  Meses: any;\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}